PROJECT = xlsreader.hwp

builddir = build/win32

C_COMPILER      = ./cl.sh
C_COMPILER_OPTS = /showIncludes /nologo /W3 /O2 /EHsc /DHW_WIN32 /DHW_LITTLE_ENDIAN /DNDEBUG /D_MBCS /D_CRT_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_DEPRECATE /MT /c /I../../include /Iinclude

LINKER          = ./link.sh
LINKER_OPTS     = /dll /nologo
LINKER_LIBS     = kernel32.lib

rule clean
  command = /bin/rm -rf $to_clean
  description = clean $builddir

rule cc
  command = ${C_COMPILER} ${C_COMPILER_OPTS} $in /Fo$out
  deps = msvc
  description = compile $in

rule link
  command = ${LINKER} ${LINKER_OPTS} /out:$out $in ${LINKER_LIBS}
  description = link $out

build $builddir/endian.o: cc src/endian.c
  depfile = $builddir/endian.d

build $builddir/ole.o: cc src/ole.c
  depfile = $builddir/ole.d

build $builddir/purefuncs.o: cc src/purefuncs.c
  depfile = $builddir/purefuncs.d

build $builddir/xls.o: cc src/xls.c
  depfile = $builddir/xls.d

build $builddir/xlsreaderplugin.o: cc src/xlsreaderplugin.c
  depfile = $builddir/xlsreaderplugin.d

build $builddir/xlstool.o: cc src/xlstool.c
  depfile = $builddir/xlstool.d

build ${builddir}/${PROJECT}: link $builddir/endian.o $builddir/ole.o $builddir/purefuncs.o $builddir/xls.o $builddir/xlsreaderplugin.o $builddir/xlstool.o

rule generate
  command = /usr/bin/python genbuildfiles.py
  generator = 1
  description = generates build files
build build.win32: generate | genbuildfiles.py build.ini

build clean: clean
  to_clean = $builddir/endian.o $builddir/ole.o $builddir/purefuncs.o $builddir/xls.o $builddir/xlsreaderplugin.o $builddir/xlstool.o ${builddir}/${PROJECT}

default ${builddir}/${PROJECT}
